{
    "openapi": "3.0.0",
    "info": {
        "title": "Scheduler-api-typescript",
        "description": "This API was developed to Cubos backend internship tecnical challenge. You will be able to manage the schedules of a clinic",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "tags": [
        {
            "name": "Rules",
            "description": "API for rules in the system"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/rules": {
            "get": {
                "tags": [
                    "Rules"
                ],
                "summary": "Get all rules in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rules"
                        }
                    },
                    "400": {
                        "description": "Something went wrong with the request;"
                    }
                }
            },
            "post": {
                "tags": [
                    "Rules"
                ],
                "summary": "Create a new rule for a single ocurrency.",
                "requestBody": {
                    "description": "Single ocurrency Rule",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Rule"
                            },
                            "example": {
                                "date": "25-08-2020",
                                "intervals": [
                                    {"start": "10:30", "end": "12:40"},
                                    {"start": "15:20", "end": "16:40"}
                                ]
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "There were conflicts with some of the given rules."
                    },
                    "201": {
                        "description": "Rules successfully created.",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/rules/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "Rule ID",
                    "type": "string"
                }
            ],
            "delete": {
                "summary": "Delete rule with given ID",
                "tags": [
                    "Rules"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Rule with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Problems deleting rule."
                    },
                    "500": {
                        "description": "Rule not found. Enter a valid ID."
                    }
                }
            }
        },
        "/rules/availableHours": {
            "get": {
                "tags": [
                    "Rules"
                ],
                "summary": "Get all available hours within given dates interval",
                "parameters": [
                    {
                        "in": "query",
                        "name": "firstDay",
                        "required": true,
                        "description": "first day from range - example: 20-08-2020",
                        "schema": {
                            "$type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "lastDay",
                        "required": true,
                        "description": "first day from range - example: 23-08-2020",
                        "schema": {
                            "$type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rules"
                        }
                    },
                    "400": {
                        "description": "Problems listing available hours."
                    },
                    "500": {
                        "description": "Missing query parameters."
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "Rule": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "days?": {
                    "type": "array",
                    "items": {
                        "type": "integer" 
                    }
                },
                "intervals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Interval"
                      }
                }
            }
        },
        "Interval": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                }
            }
        },
        "Date": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end": {
                    "type": "string"
                }
            }
        },
        "Rules": {
            "type": "object",
            "properties": {
                "cats": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Rule"
                    }
                }
            }
        }
    }
}